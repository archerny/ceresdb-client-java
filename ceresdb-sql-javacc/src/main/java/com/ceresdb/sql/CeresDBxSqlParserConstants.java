/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated by: ParserGeneratorCC: Do not edit this line. CeresDBxSqlParserConstants.java */
package com.ceresdb.sql;

/**
 * Token literal values and constants.
 * Generated by com.helger.pgcc.output.java.OtherFilesGenJava#start()
 */
public interface CeresDBxSqlParserConstants {

    /** End of File. */
    int EOF                 = 0;
    /** RegularExpression Id. */
    int WHITESPACE          = 1;
    /** RegularExpression Id. */
    int SINGLE_LINE_COMMENT = 2;
    /** RegularExpression Id. */
    int ALTER               = 7;
    /** RegularExpression Id. */
    int ATTACH              = 8;
    /** RegularExpression Id. */
    int CHECK               = 9;
    /** RegularExpression Id. */
    int CREATE              = 10;
    /** RegularExpression Id. */
    int DELETE              = 11;
    /** RegularExpression Id. */
    int DESC                = 12;
    /** RegularExpression Id. */
    int DESCRIBE            = 13;
    /** RegularExpression Id. */
    int DETACH              = 14;
    /** RegularExpression Id. */
    int DROP                = 15;
    /** RegularExpression Id. */
    int EXISTS              = 16;
    /** RegularExpression Id. */
    int EXPLAIN             = 17;
    /** RegularExpression Id. */
    int GRANT               = 18;
    /** RegularExpression Id. */
    int INSERT              = 19;
    /** RegularExpression Id. */
    int KILL                = 20;
    /** RegularExpression Id. */
    int OPTIMIZE            = 21;
    /** RegularExpression Id. */
    int RENAME              = 22;
    /** RegularExpression Id. */
    int REVOKE              = 23;
    /** RegularExpression Id. */
    int SELECT              = 24;
    /** RegularExpression Id. */
    int SET                 = 25;
    /** RegularExpression Id. */
    int SHOW                = 26;
    /** RegularExpression Id. */
    int SYSTEM              = 27;
    /** RegularExpression Id. */
    int TRUNCATE            = 28;
    /** RegularExpression Id. */
    int UPDATE              = 29;
    /** RegularExpression Id. */
    int USE                 = 30;
    /** RegularExpression Id. */
    int WATCH               = 31;
    /** RegularExpression Id. */
    int ALL                 = 32;
    /** RegularExpression Id. */
    int AND                 = 33;
    /** RegularExpression Id. */
    int APPLY               = 34;
    /** RegularExpression Id. */
    int ARRAY               = 35;
    /** RegularExpression Id. */
    int AS                  = 36;
    /** RegularExpression Id. */
    int ASOF                = 37;
    /** RegularExpression Id. */
    int BETWEEN             = 38;
    /** RegularExpression Id. */
    int CASE                = 39;
    /** RegularExpression Id. */
    int DATE                = 40;
    /** RegularExpression Id. */
    int DATABASE            = 41;
    /** RegularExpression Id. */
    int DATABASES           = 42;
    /** RegularExpression Id. */
    int DICTIONARY          = 43;
    /** RegularExpression Id. */
    int DICTIONARIES        = 44;
    /** RegularExpression Id. */
    int DISTINCT            = 45;
    /** RegularExpression Id. */
    int ELSE                = 46;
    /** RegularExpression Id. */
    int END                 = 47;
    /** RegularExpression Id. */
    int EXCEPT              = 48;
    /** RegularExpression Id. */
    int FINAL               = 49;
    /** RegularExpression Id. */
    int FROM                = 50;
    /** RegularExpression Id. */
    int FULL                = 51;
    /** RegularExpression Id. */
    int FUNCTION            = 52;
    /** RegularExpression Id. */
    int GLOBAL              = 53;
    /** RegularExpression Id. */
    int GROUP               = 54;
    /** RegularExpression Id. */
    int HAVING              = 55;
    /** RegularExpression Id. */
    int IF                  = 56;
    /** RegularExpression Id. */
    int ILIKE               = 57;
    /** RegularExpression Id. */
    int IN                  = 58;
    /** RegularExpression Id. */
    int INNER               = 59;
    /** RegularExpression Id. */
    int INTERVAL            = 60;
    /** RegularExpression Id. */
    int INTO                = 61;
    /** RegularExpression Id. */
    int IS                  = 62;
    /** RegularExpression Id. */
    int JOIN                = 63;
    /** RegularExpression Id. */
    int LEFT                = 64;
    /** RegularExpression Id. */
    int LIKE                = 65;
    /** RegularExpression Id. */
    int LIMIT               = 66;
    /** RegularExpression Id. */
    int LIVE                = 67;
    /** RegularExpression Id. */
    int MATERIALIZED        = 68;
    /** RegularExpression Id. */
    int NOT                 = 69;
    /** RegularExpression Id. */
    int OFFSET              = 70;
    /** RegularExpression Id. */
    int ON                  = 71;
    /** RegularExpression Id. */
    int OR                  = 72;
    /** RegularExpression Id. */
    int ORDER               = 73;
    /** RegularExpression Id. */
    int POLICY              = 74;
    /** RegularExpression Id. */
    int PREWHERE            = 75;
    /** RegularExpression Id. */
    int PROFILE             = 76;
    /** RegularExpression Id. */
    int QUOTA               = 77;
    /** RegularExpression Id. */
    int REPLACE             = 78;
    /** RegularExpression Id. */
    int ROLE                = 79;
    /** RegularExpression Id. */
    int ROW                 = 80;
    /** RegularExpression Id. */
    int RIGHT               = 81;
    /** RegularExpression Id. */
    int SAMPLE              = 82;
    /** RegularExpression Id. */
    int SETTINGS            = 83;
    /** RegularExpression Id. */
    int TEMPORARY           = 84;
    /** RegularExpression Id. */
    int TABLE               = 85;
    /** RegularExpression Id. */
    int TABLES              = 86;
    /** RegularExpression Id. */
    int THEN                = 87;
    /** RegularExpression Id. */
    int TIES                = 88;
    /** RegularExpression Id. */
    int TIMESTAMP           = 89;
    /** RegularExpression Id. */
    int TOP                 = 90;
    /** RegularExpression Id. */
    int TOTALS              = 91;
    /** RegularExpression Id. */
    int UNION               = 92;
    /** RegularExpression Id. */
    int USER                = 93;
    /** RegularExpression Id. */
    int USING               = 94;
    /** RegularExpression Id. */
    int VALUES              = 95;
    /** RegularExpression Id. */
    int VIEW                = 96;
    /** RegularExpression Id. */
    int WHEN                = 97;
    /** RegularExpression Id. */
    int WHERE               = 98;
    /** RegularExpression Id. */
    int WITH                = 99;
    /** RegularExpression Id. */
    int SECOND              = 100;
    /** RegularExpression Id. */
    int MINUTE              = 101;
    /** RegularExpression Id. */
    int HOUR                = 102;
    /** RegularExpression Id. */
    int DAY                 = 103;
    /** RegularExpression Id. */
    int WEEK                = 104;
    /** RegularExpression Id. */
    int MONTH               = 105;
    /** RegularExpression Id. */
    int QUARTER             = 106;
    /** RegularExpression Id. */
    int YEAR                = 107;
    /** RegularExpression Id. */
    int INF                 = 108;
    /** RegularExpression Id. */
    int NAN                 = 109;
    /** RegularExpression Id. */
    int NULL                = 110;
    /** RegularExpression Id. */
    int A                   = 111;
    /** RegularExpression Id. */
    int B                   = 112;
    /** RegularExpression Id. */
    int C                   = 113;
    /** RegularExpression Id. */
    int D                   = 114;
    /** RegularExpression Id. */
    int E                   = 115;
    /** RegularExpression Id. */
    int F                   = 116;
    /** RegularExpression Id. */
    int G                   = 117;
    /** RegularExpression Id. */
    int H                   = 118;
    /** RegularExpression Id. */
    int I                   = 119;
    /** RegularExpression Id. */
    int J                   = 120;
    /** RegularExpression Id. */
    int K                   = 121;
    /** RegularExpression Id. */
    int L                   = 122;
    /** RegularExpression Id. */
    int M                   = 123;
    /** RegularExpression Id. */
    int N                   = 124;
    /** RegularExpression Id. */
    int O                   = 125;
    /** RegularExpression Id. */
    int P                   = 126;
    /** RegularExpression Id. */
    int Q                   = 127;
    /** RegularExpression Id. */
    int R                   = 128;
    /** RegularExpression Id. */
    int S                   = 129;
    /** RegularExpression Id. */
    int T                   = 130;
    /** RegularExpression Id. */
    int U                   = 131;
    /** RegularExpression Id. */
    int V                   = 132;
    /** RegularExpression Id. */
    int W                   = 133;
    /** RegularExpression Id. */
    int X                   = 134;
    /** RegularExpression Id. */
    int Y                   = 135;
    /** RegularExpression Id. */
    int Z                   = 136;
    /** RegularExpression Id. */
    int LETTER              = 137;
    /** RegularExpression Id. */
    int ZERO                = 138;
    /** RegularExpression Id. */
    int DEC_DIGIT           = 139;
    /** RegularExpression Id. */
    int HEX_DIGIT           = 140;
    /** RegularExpression Id. */
    int ARROW               = 141;
    /** RegularExpression Id. */
    int ASTERISK            = 142;
    /** RegularExpression Id. */
    int AT                  = 143;
    /** RegularExpression Id. */
    int BACK_QUOTE          = 144;
    /** RegularExpression Id. */
    int BACK_SLASH          = 145;
    /** RegularExpression Id. */
    int COLON               = 146;
    /** RegularExpression Id. */
    int COMMA               = 147;
    /** RegularExpression Id. */
    int CONCAT              = 148;
    /** RegularExpression Id. */
    int DASH                = 149;
    /** RegularExpression Id. */
    int DOLLAR              = 150;
    /** RegularExpression Id. */
    int DOT                 = 151;
    /** RegularExpression Id. */
    int EQ_DOUBLE           = 152;
    /** RegularExpression Id. */
    int EQ_SINGLE           = 153;
    /** RegularExpression Id. */
    int GE                  = 154;
    /** RegularExpression Id. */
    int GT                  = 155;
    /** RegularExpression Id. */
    int HASH                = 156;
    /** RegularExpression Id. */
    int LBRACE              = 157;
    /** RegularExpression Id. */
    int LBRACKET            = 158;
    /** RegularExpression Id. */
    int LE                  = 159;
    /** RegularExpression Id. */
    int LPAREN              = 160;
    /** RegularExpression Id. */
    int LT                  = 161;
    /** RegularExpression Id. */
    int NOT_EQ              = 162;
    /** RegularExpression Id. */
    int PERCENT             = 163;
    /** RegularExpression Id. */
    int PLUS                = 164;
    /** RegularExpression Id. */
    int QUERY               = 165;
    /** RegularExpression Id. */
    int DOUBLE_QUOTE        = 166;
    /** RegularExpression Id. */
    int SINGLE_QUOTE        = 167;
    /** RegularExpression Id. */
    int RBRACE              = 168;
    /** RegularExpression Id. */
    int RBRACKET            = 169;
    /** RegularExpression Id. */
    int RPAREN              = 170;
    /** RegularExpression Id. */
    int SEMICOLON           = 171;
    /** RegularExpression Id. */
    int SLASH               = 172;
    /** RegularExpression Id. */
    int UNDERSCORE          = 173;
    /** RegularExpression Id. */
    int STRING_LITERAL      = 174;
    /** RegularExpression Id. */
    int IDENTIFIER          = 175;
    /** RegularExpression Id. */
    int BACK_QUOTED_NAME    = 176;
    /** RegularExpression Id. */
    int DOUBLE_QUOTED_NAME  = 177;
    /** RegularExpression Id. */
    int FLOATING_LITERAL    = 178;
    /** RegularExpression Id. */
    int DECIMAL_LITERAL     = 179;
    /** RegularExpression Id. */
    int HEXADECIMAL_LITERAL = 180;

    /** Lexical state. */
    int DEFAULT            = 0;
    /** Lexical state. */
    int MULTI_LINE_COMMENT = 1;

    /** Literal token values. */
    String[] tokenImage = { "<EOF>", "<WHITESPACE>", "<SINGLE_LINE_COMMENT>", "\"/*\"", "\"/*\"", "\"*/\"",
                            "<token of kind 6>", "<ALTER>", "<ATTACH>", "<CHECK>", "<CREATE>", "<DELETE>", "<DESC>",
                            "<DESCRIBE>", "<DETACH>", "<DROP>", "<EXISTS>", "<EXPLAIN>", "<GRANT>", "<INSERT>",
                            "<KILL>", "<OPTIMIZE>", "<RENAME>", "<REVOKE>", "<SELECT>", "<SET>", "<SHOW>", "<SYSTEM>",
                            "<TRUNCATE>", "<UPDATE>", "<USE>", "<WATCH>", "<ALL>", "<AND>", "<APPLY>", "<ARRAY>",
                            "<AS>", "<ASOF>", "<BETWEEN>", "<CASE>", "<DATE>", "<DATABASE>", "<DATABASES>",
                            "<DICTIONARY>", "<DICTIONARIES>", "<DISTINCT>", "<ELSE>", "<END>", "<EXCEPT>", "<FINAL>",
                            "<FROM>", "<FULL>", "<FUNCTION>", "<GLOBAL>", "<GROUP>", "<HAVING>", "<IF>", "<ILIKE>",
                            "<IN>", "<INNER>", "<INTERVAL>", "<INTO>", "<IS>", "<JOIN>", "<LEFT>", "<LIKE>", "<LIMIT>",
                            "<LIVE>", "<MATERIALIZED>", "<NOT>", "<OFFSET>", "<ON>", "<OR>", "<ORDER>", "<POLICY>",
                            "<PREWHERE>", "<PROFILE>", "<QUOTA>", "<REPLACE>", "<ROLE>", "<ROW>", "<RIGHT>", "<SAMPLE>",
                            "<SETTINGS>", "<TEMPORARY>", "<TABLE>", "<TABLES>", "<THEN>", "<TIES>", "<TIMESTAMP>",
                            "<TOP>", "<TOTALS>", "<UNION>", "<USER>", "<USING>", "<VALUES>", "<VIEW>", "<WHEN>",
                            "<WHERE>", "<WITH>", "<SECOND>", "<MINUTE>", "<HOUR>", "<DAY>", "<WEEK>", "<MONTH>",
                            "<QUARTER>", "<YEAR>", "<INF>", "<NAN>", "<NULL>", "<A>", "<B>", "<C>", "<D>", "<E>", "<F>",
                            "<G>", "<H>", "<I>", "<J>", "<K>", "<L>", "<M>", "<N>", "<O>", "<P>", "<Q>", "<R>", "<S>",
                            "<T>", "<U>", "<V>", "<W>", "<X>", "<Y>", "<Z>", "<LETTER>", "\"0\"", "<DEC_DIGIT>",
                            "<HEX_DIGIT>", "\"->\"", "\"*\"", "\"@\"", "\"`\"", "\"\\\\\"", "\":\"", "\",\"", "\"||\"",
                            "\"-\"", "\"$\"", "\".\"", "\"==\"", "\"=\"", "\">=\"", "\">\"", "\"#\"", "\"{\"", "\"[\"",
                            "\"<=\"", "\"(\"", "\"<\"", "<NOT_EQ>", "\"%\"", "\"+\"", "\"?\"", "\"\\\"\"", "\"\\\'\"",
                            "\"}\"", "\"]\"", "\")\"", "\";\"", "\"/\"", "\"_\"", "<STRING_LITERAL>", "<IDENTIFIER>",
                            "<BACK_QUOTED_NAME>", "<DOUBLE_QUOTED_NAME>", "<FLOATING_LITERAL>", "<DECIMAL_LITERAL>",
                            "<HEXADECIMAL_LITERAL>", };

}
